/**
 *DigitalNewzealandLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 09/22/2016
 */
/**
 * Creates a instance of CollectionSearchRecords
 *
 * @constructor
 */

angular.module('DigitalNewzealandLib').factory('CollectionSearchRecords',function(BaseModel,ResultsCollection){
	var CollectionSearchRecords = function(obj) {
		if(!obj){
						this.numResultsRequested = null;     
    				this.resultCount = null;     
    				this.start = null;     
    				this.results = null;     
    				this.facets = null;     
    								//Append to variable dictionary
    this._variableDict['numResultsRequested'] = 'num_results_requested';
    this._variableDict['resultCount'] = 'result_count';
    					
		}
		else
		{
					this.numResultsRequested = obj.num_results_requested;
    		this.resultCount = obj.result_count;
    		this.start = obj.start;
    		this.results = new ResultsCollection(obj.results);
    		this.facets = obj.facets;
    //Append to variable dictionary
    this._variableDict['numResultsRequested'] = 'num_results_requested';
    this._variableDict['resultCount'] = 'result_count';
 
		}
	}

	CollectionSearchRecords.prototype = new BaseModel();
	CollectionSearchRecords.prototype.constructor = CollectionSearchRecords;

		/**
	 * the value of the num_results parameter sent to the API method
	 *
	 * @return {int}
	 */
	CollectionSearchRecords.prototype.getNumResultsRequested = function() {
		return this.numResultsRequested;
	};

	/**
	 * Setter for NumResultsRequested
	 * 
	 * @param {int} value 
	 */
	CollectionSearchRecords.prototype.setNumResultsRequested = function(value) {
		this.numResultsRequested = value;
	};

		/**
	 * the total number of results matching this search
	 *
	 * @return {int}
	 */
	CollectionSearchRecords.prototype.getResultCount = function() {
		return this.resultCount;
	};

	/**
	 * Setter for ResultCount
	 * 
	 * @param {int} value 
	 */
	CollectionSearchRecords.prototype.setResultCount = function(value) {
		this.resultCount = value;
	};

		/**
	 * the value of the start parameter sent to the API method
	 *
	 * @return {string}
	 */
	CollectionSearchRecords.prototype.getStart = function() {
		return this.start;
	};

	/**
	 * Setter for Start
	 * 
	 * @param {string} value 
	 */
	CollectionSearchRecords.prototype.setStart = function(value) {
		this.start = value;
	};

		/**
	 * the search results data. The results element will contain 0 or more result elements
	 *
	 * @return {ResultsCollection}
	 */
	CollectionSearchRecords.prototype.getResults = function() {
		return this.results;
	};

	/**
	 * Setter for Results
	 * 
	 * @param {ResultsCollection} value 
	 */
	CollectionSearchRecords.prototype.setResults = function(value) {
		this.results = value;
	};

		/**
	 * the facet result data (if requested). The facets element will contain one facet-field element corresponding to each facet requested. Each facet-field element contains a sorted list of value elements that are made up of a name and num-results element.
	 *
	 * @return {array}
	 */
	CollectionSearchRecords.prototype.getFacets = function() {
		return this.facets;
	};

	/**
	 * Setter for Facets
	 * 
	 * @param {array} value 
	 */
	CollectionSearchRecords.prototype.setFacets = function(value) {
		this.facets = value;
	};

	
	return CollectionSearchRecords;
});